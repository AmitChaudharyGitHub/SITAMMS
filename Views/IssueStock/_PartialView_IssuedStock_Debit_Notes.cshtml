<style>
    .gridTable {
        margin: 5px;
        padding: 10px;
        border: 1px #c8c8c8 solid;
        border-collapse: collapse;
        min-width: 550px;
        background-color: #fff;
        color: #fff;
        width: 100%;
    }

    .gridHead th {
        font-weight: bold;
        background-color: #5c93f0;
        color: #fff;
        padding: 10px;
        text-align: center;
    }

    .gridHead a:link, .gridHead a:visited, .gridHead a:active, .gridHead a:hover {
        color: #fff;
    }

    .gridHead a:hover {
        text-decoration: underline;
    }

    .gridTable tr.gridAltRow {
        background-color: #efeeef;
    }

    .gridTable tr:hover {
        background-color: #7da3f2;
    }

    .gridTable tr :hover {
        /*color: white;*/
    }

    .gridAltRow td {
        padding: 10px 4px;
        margin: 5px;
        color: #333;
        font-size: 12px;
    }

    .gridRow td {
        padding: 10px 4px;
        color: #333;
        font-size: 12px;
    }

    .gridFooter td {
        padding: 10px;
        color: #ffffff;
        font-size: 12pt;
        text-align: center;
        background-color: #5c93f0;
    }

    .gridFooter a {
        text-decoration: none;
        padding: 6px 11px;
        margin-right: 6px;
        border-radius: 3px;
        color: #fff;
        text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.5);
        border: 1px solid #43505e;
        background: #556270;
        background: -moz-linear-gradient(top, #556270 0%, #444d57 100%);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#556270), color-stop(100%,#444d57));
        background: -webkit-linear-gradient(top, #556270 0%,#444d57 100%);
        background: -o-linear-gradient(top, #556270 0%,#444d57 100%);
        background: -ms-linear-gradient(top, #556270 0%,#444d57 100%);
        background: linear-gradient(to bottom, #556270 0%,#444d57 100%);
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#556270', endColorstr='#444d57',GradientType=0 );
        -moz-box-shadow: inset 0 3px 0px -2px rgba(255, 255, 255, .3);
        -webkit-box-shadow: inset 0 3px 0px -2px rgba(255, 255, 255, .3);
        box-shadow: inset 0 3px 0px -2px rgba(255, 255, 255, .3);
    }

    .my-classR {
        text-align: right;
    }

    .my-classL {
        text-align: left;
    }

    .my-classC {
        text-align: center;
    }
</style>

<div id="gridposition" style="width: 100%; overflow:scroll">
    @if (Model.Count > 0)
    {
        <div class="text-right">Select All <input type = "checkbox" class="checkbox" id="chkSelectAll" onchange="OnCheckAllChange();" value="Select All" /></div>
        var grid1 = new WebGrid(source: Model, canPage: true,rowsPerPage:100, ajaxUpdateContainerId: "positionGrid",ajaxUpdateCallback: "GetSavedData");
        using(Html.BeginForm("PCDebitNote", "IssueStock",FormMethod.Post,new {id="frmGridData" })){
       @grid1.GetHtml(mode: WebGridPagerModes.All,
                  tableStyle: "gridTable",
                  headerStyle: "gridHead",
                  footerStyle: "gridFooter",
                  rowStyle: "gridRow",
                  alternatingRowStyle: "gridAltRow",
                  htmlAttributes: new { id = "positionGrid" },
                  fillEmptyRows: false,
                  columns: grid1.Columns(
                   grid1.Column(header: "S.No.", format: @<text><div style="text-align:center;">@(item.WebGrid.Rows.IndexOf(item) + 1)</div></text>),
                           grid1.Column("Issue_Date", header: "Issue Date", format: (item) => string.Format("{0:dd-MMM-yyyy}", item.Issue_Date)),
                           grid1.Column("IndentNo", header: "Requisition No", style: "my-classL"),
                           grid1.Column("ItemCode", header: "Item Code", style: "my-classL"),
                           grid1.Column("HSNCode", header: "HSN Code", style: "my-classL"),
                           grid1.Column("ItemGroupName", header: "Item Group", style: "my-classL"),
                           grid1.Column("ItemName", header: "Item Name", style: "my-classL"),
                           grid1.Column("UnitName", header: "Unit", style: "my-classL"),
                           grid1.Column("IssueQuantity", header: "Quantity", format: (item) => string.Format("{0:0.000}", item.IssueQuantity), style: "my-classR"),
                           grid1.Column("IssueAmount", header: "Amount", format: (item) => string.Format("{0:0.00}", item.IssueAmount), style: "my-classR"),
                           grid1.Column("IssuedTo", header: "Issued To PC / Work", style: "my-classC"),
                            grid1.Column("Optional_Name", header: "Issued Name", style: "my-classC"),
                            grid1.Column("FinancialType", header: "Issued Type", style: "my-classC"),
                            grid1.Column("DebitNote", header: "Remarks", format:@<text><textarea id="txt@(item.IssueNo)" rows="2" cols="15"></textarea> </text>, style: "my-classL"),
                            grid1.Column(format:@<text><input type="checkbox" class="checkbox chkDebitNote" id="@item.IssueNo" onchange="ChkDebitNoteChange(this)"/></text>, style: "my-classL")
                           ));
        }
    }
    else
    {<p style="color:red; font-size:large"> No records found !!!!</p>}

</div>