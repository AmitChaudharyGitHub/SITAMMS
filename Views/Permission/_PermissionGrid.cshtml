@*@model IEnumerable< MMS.ViewModels.PermissionViewModel>*@

<style>
    .gridTable {
        margin: 5px;
        padding: 10px;
        border: 1px #c8c8c8 solid;
        border-collapse: collapse;
        min-width: 550px;
        background-color: #fff;
        color: #fff;
        width: 100%;
    }

    .gridHead th {
        font-weight: bold;
        background-color: #5c93f0;
        color: #fff;
        padding: 10px;
        text-align: left;
    }

    .gridHead a:link, .gridHead a:visited, .gridHead a:active, .gridHead a:hover {
        color: #fff;
    }

    .gridHead a:hover {
        text-decoration: underline;
    }

    .gridTable tr.gridAltRow {
        background-color: #efeeef;
    }

    .gridTable tr:hover {
        background-color: #7da3f2;
    }

    .gridTable tr :hover {
        color: white;
    }

    .gridAltRow td {
        padding: 10px;
        margin: 5px;
        color: #333;
        text-align: left;
    }

    .gridRow td {
        padding: 10px;
        color: #333;
        text-align: left;
    }

    .gridFooter td {
        padding: 10px;
        color: #ffffff;
        font-size: 12pt;
        text-align: center;
        background-color: #5c93f0;
    }

     .expand {
        background-image: url(/Images/pm.png);
        background-position-x: -22px;
        background-repeat: no-repeat;
    }

    .Tocollapse {
        background-image: url(/Images/pm.png);
        background-position-x: 15px;
        background-repeat: no-repeat;
    }




    .gridFooter a {
        text-decoration: none;
        padding: 6px 11px;
        margin-right: 6px;
        border-radius: 3px;
        color: #fff;
        text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.5);
        border: 1px solid #43505e;
        background: #556270;
        background: -moz-linear-gradient(top, #556270 0%, #444d57 100%);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#556270), color-stop(100%,#444d57));
        background: -webkit-linear-gradient(top, #556270 0%,#444d57 100%);
        background: -o-linear-gradient(top, #556270 0%,#444d57 100%);
        background: -ms-linear-gradient(top, #556270 0%,#444d57 100%);
        background: linear-gradient(to bottom, #556270 0%,#444d57 100%);
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#556270', endColorstr='#444d57',GradientType=0 );
        -moz-box-shadow: inset 0 3px 0px -2px rgba(255, 255, 255, .3);
        -webkit-box-shadow: inset 0 3px 0px -2px rgba(255, 255, 255, .3);
        box-shadow: inset 0 3px 0px -2px rgba(255, 255, 255, .3);
    }
</style>


@*@{

    WebGrid grid = new WebGrid(source: Model, canSort: false, rowsPerPage: 25);
}*@

@*<style>
    /*Here I will write some css for looks good*/

    th, td {
        padding: 5px;
    }
    th {
        text-align:center;
    }

    th {
        background-color: rgb(248, 248, 248);
    }

    #gridT, #gridT tr {
        border: 1px solid #0D857B;
    }

    #subT, #subT tr {
        border: 1px solid #f3f3f3;
    }

    #subT {
        margin: 0px 0px 0px 10px;
        padding: 5px;
        width: 95%;
    }

        #subT th {
            font-size: 12px;
        }

    .hoverEff {
        cursor: pointer;
    }

        .hoverEff:hover {
            background-color: rgb(248, 242, 242);
        }

    .expand {
        background-image: url(/Images/pm.png);
        background-position-x: -22px;
        background-repeat: no-repeat;
    }

    .Tocollapse {
        background-image: url(/Images/pm.png);
        background-position-x: 15px;
        background-repeat: no-repeat;
    }
</style>*@

<div id="main" >


    @if (Model.Count > 0)
    {
        WebGrid grid = new WebGrid(source: Model, canSort: false , rowsPerPage : 50);
      // var grid1 = new WebGrid(source: Model, canPage: true, rowsPerPage: 10, ajaxUpdateContainerId: "positionGrid");

       @grid.GetHtml(
           htmlAttributes: new { id = "gridT", width = "900px" },
           mode: WebGridPagerModes.All,
                      tableStyle: "gridTable",
                      headerStyle: "gridHead",
                      footerStyle: "gridFooter",
                      rowStyle: "gridRow",
                      alternatingRowStyle: "gridAltRow",
                      fillEmptyRows: false,
           columns: grid.Columns(
            grid.Column("Main.TransId", "S.No"),
            //grid.Column(header: "Created Date", format: (item) => string.Format("{0:dd-MM-yyyy}", item.Main.CreatedDate)),
            grid.Column("Main.HeaderName", "Menu Name"),
            //grid.Column("order.CustomerAddress", "Address"),

            grid.Column(format: (item1) =>
            {
            WebGrid subGrid = new WebGrid(source: item1.Sub, canSort: false, rowsPerPage: 50);
            return subGrid.GetHtml(
                mode: WebGridPagerModes.All,
                      tableStyle: "gridTable",
                      headerStyle: "gridHead",
                      footerStyle: "gridFooter",
                      rowStyle: "gridRow",
                      alternatingRowStyle: "gridAltRow",
                      fillEmptyRows: false,
                htmlAttributes: new { id = "subT" },
                columns: subGrid.Columns(
                        subGrid.Column(format: @<text> <input type="checkbox" value="@item.STransId" checked="checked" name="ids" id="checkbox_Stc1" /> </text>,
                    header: "{checkall}"),
                            subGrid.Column("SubHeaderName", "Sub Menu Name")
                            //subGrid.Column("Quantity", "Quantity"),
                            //subGrid.Column("Rate", "Rate"),
                            //subGrid.Column("Amount", "Amount")
                        )
                    );
            })
        )
    )

}
else
{
        <p style="color:red; font-size:large">No records found !!!!</p>
    }



</div>



@* Here I will add some jquery code for make this nested grid collapsible *@

@*@section Scripts{*@
<script src="~/Scripts/jquery-1.7.1.min.js"></script>

    <script>
        $(document).ready(function () {
            var size = $("#main #gridT > thead > tr >th").size(); // get total column
            $("#main #gridT > thead > tr >th").last().remove(); // remove last column
            $("#main #gridT > thead > tr").prepend("<th></th>"); // add one column at first for collapsible column
            $("#main #gridT > tbody > tr").each(function (i, el) {
                $(this).prepend(
                        $("<td></td>")
                        .addClass("expand")
                        .addClass("hoverEff")
                        .attr('title',"click for show/hide")
                    );

                //Now get sub table from last column and add this to the next new added row
                var table = $("table", this).parent().html();
                //add new row with this subtable
                $(this).after("<tr><td></td><td style='padding:5px; margin:0px;' colspan='" + (size - 1) + "'>" + table + "</td></tr>");
                $("table", this).parent().remove();
                // ADD CLICK EVENT FOR MAKE COLLAPSIBLE
                $(".hoverEff", this).live("click", function () {
                    $(this).parent().closest("tr").next().slideToggle(100);
                    $(this).toggleClass("expand Tocollapse");
                });
            });

            //by default make all subgrid in collapse mode
            $("#main #gridT > tbody > tr td.expand").each(function (i, el) {
                $(this).toggleClass("expand Tocollapse");
                $(this).parent().closest("tr").next().slideToggle(100);
            });

        });
    </script>


    <script>
        $(document).ready(function () {

            // 1st replace first column header text with checkbox

            $("#subT th").each(function () {
                if ($.trim($(this).text().toString().toLowerCase()) === "{checkall}") {
                    $(this).text('');
                    $("<input/>", { type: "checkbox", id: "cbSelectAll", value: "" }).appendTo($(this));
                    //$(this).append("<span>Check</span>");
                    $(this).text('');
                    $(this).append("<span>Select</span>");
                }
            });

            //2nd click event for header checkbox for select /deselect all
            $("#cbSelectAll").live("click", function () {
                var ischecked = this.checked;
                $('#subT').find("input:checkbox").each(function () {
                    this.checked = ischecked;
                });
            });


            //3rd click event for checkbox of each row
            //$("input[name='ids']").click(function () {
            //    debugger;
            //    var totalRows = $("#subT td :checkbox").length;
            //    var checked = $("#subT td :checkbox:checked").length;

            //    if (checked == totalRows) {
            //        debugger;
            //        $("#subT").find("input:checkbox").each(function () {
            //            this.checked = true;
            //        });
            //    }
            //    else {
            //        $("#cbSelectAll").removeAttr("checked");
            //    }
            //});

           // debugger;


        });
    </script>

@*}*@

