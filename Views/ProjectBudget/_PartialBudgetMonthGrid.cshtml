
@model List<MMS.ViewModels.ProjectYearBudgetReport>
@{
    int yearinc = 0;
    int sno = 1;
    int itmsno = 0;
    int itmyrsnqty = 0;
    int itmyrsnrate = 0;
    int itmyrsnamt = 0;
}

<style>
    th {
        font-weight: bold !important;
    }
      tr input {
    width:80px;
    }
</style>

<table class="table table-bordered">
    @if (ViewBag.Error!=null)
    {
        <tr>@ViewBag.Error</tr>
    }
    else {
    <thead>
        <tr>
            <th>SNo.</th>
            <th>Items</th>
            <th>Unit</th>
            <th></th>
            @for (int i = (int)ViewBag.FromYear; i <= (int)ViewBag.FromYear; i++)
            {
                <th>@((DateTime.Now.Year + yearinc) + "-" + (DateTime.Now.Year + yearinc + 1))</th>
                yearinc++;
            }

           @for (int i = 1; i <= 12; i++)
           {
            <th>@(new DateTime(ViewBag.FromYear, i, 1).ToString("yy") + "-" + new DateTime(ViewBag.FromYear, i, 1).ToString("MMM"))</th>
           }

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td rowspan="4">@sno</td>
                <td rowspan="4">@item.ItemName</td>
                <td rowspan="4">@item.ItemUnit</td>
            </tr>
            <tr>
                <td>Item Qty</td>
                @for (int i = (int)ViewBag.FromYear; i <= (int)ViewBag.FromYear; i++)
                {
                    var itemObj = item.BudgetItemData.Where(s => s.BudgetYear == i.ToString()).Select(s => s);
                    <td>
                        @item.BudgetItemData.Where(s => s.BudgetYear == i.ToString()).Select(s => s.ItemQty).FirstOrDefault()
                        <input type="hidden" class="BudgetQty@(itmsno)" value="@item.BudgetItemData.Where(s => s.BudgetYear == i.ToString()).Select(s => s.ItemQty).FirstOrDefault()" />
                        <input type="hidden" class="BudgetQtyDiff@(itmsno)"/>
                        <input type="hidden" class="ItemName" name="ItemName" value="@item.ItemName" />
                     </td>
                }
                @for (int i = 1; i <= 12; i++)
                {
                    <td>
                        <input type="text" class="MonthQty@(itmsno)" name="MonthBudget[@itmyrsnqty].ItemQty" oninput="this.value.replace(/[^0-9\.]/g,'')" value="@(Math.Round((decimal)(item.BudgetItemData.Where(s => s.BudgetYear == ViewBag.FromYear.ToString()).Select(s => s.ItemQty).FirstOrDefault() / 12), 2))" />
                        <input type="hidden" name="MonthBudget[@itmyrsnqty].BudgetYear" value="@ViewBag.FromYear" />
                        <input type="hidden" name="MonthBudget[@itmyrsnqty].BudgetMonth" value="@i" />
                        <input type="hidden" class="ItemID" name="MonthBudget[@itmyrsnqty].ItemID" value="@item.ItemID" />
                        <input type="hidden" id="hdProject" name="MonthBudget[@itmyrsnqty].ProjectID" value="@ViewBag.ProjectID" />
                    </td>
                    itmyrsnqty++;
                }
            </tr>
            <tr>
                <td>ItemRate</td>
                @for (int i = (int)ViewBag.FromYear; i <= (int)ViewBag.FromYear; i++)
                {

                    <td>@item.BudgetItemData.Where(s => s.BudgetYear == i.ToString()).Select(s => s.ItemRate).FirstOrDefault()</td>
                }
                @for (int i = 1; i <= 12; i++)
                {
                    <td><input type="text" class="MonthRate@(itmsno)" name="MonthBudget[@itmyrsnrate].ItemRate" oninput="this.value.replace(/[^0-9\.]/g,'')" value="@(item.BudgetItemData.Where(s => s.BudgetYear == ViewBag.FromYear.ToString()).Select(s => s.ItemRate).FirstOrDefault())" /></td>
                    itmyrsnrate++;
                }
            </tr>
            <tr>
                <td>ItemAmt</td>
                @for (int i = (int)ViewBag.FromYear; i <= (int)ViewBag.FromYear; i++)
                {
                    <td>
                        @item.BudgetItemData.Where(s => s.BudgetYear == i.ToString()).Select(s => s.TotalAmt).FirstOrDefault()
                        <input type="hidden" class="BudgetAmt@(itmsno)" indexnum="@itmsno" value="@item.BudgetItemData.Where(s => s.BudgetYear == i.ToString()).Select(s => s.TotalAmt).FirstOrDefault()" />
                        <input type="hidden" class="BudgetAmtDiff@(itmsno)" indexnum="@itmsno" />
                    </td>
                }
                @for (int i = 1; i <= 12; i++)
                {
                    <td>
                        <input type="text" class="MonthAmt@(itmsno)" name="MonthBudget[@itmyrsnamt].TotalAmt" oninput="this.value.replace(/[^0-9\.]/g,'')" value="@(Math.Round((decimal)(Math.Round((decimal)(item.BudgetItemData.Where(s => s.BudgetYear == ViewBag.FromYear.ToString()).Select(s => s.ItemQty).FirstOrDefault() / 12), 2) * (item.BudgetItemData.Where(s => s.BudgetYear == ViewBag.FromYear.ToString()).Select(s => s.ItemRate).FirstOrDefault())), 2))" readonly />
                    </td>
                    itmyrsnamt++;
                }
            </tr>

            itmsno++;
            sno++;
        }
    </tbody>
    }
</table>


