@model MMS.ViewModels.GetGrid_ExcessITEMS
@{
    Layout = null;
}

<style>
    .aas {
        background-color: #4A89DC;
        color: white;
        cursor: crosshair;
    }

    /*Here we will add css for style webgrid*/
    .webgrid-table {
        font-family: "Courier New", Courier, monospace;
        background: #fff none repeat scroll 0 0;
        border: 1px solid #167f92;
        border-radius: 10px;
        color: #024457;
        margin: 1em 0;
        overflow: hidden;
        width: 100%;
        background-color: white;
        font-size: 1.1em;
        font-weight: bold;
    }

        .webgrid-table td, th {
            border: 1px solid #d9e4e6;
            padding: 3px 7px 2px;
            text-align: center;
        }

        .webgrid-table th, a {
            color: white;
        }



    .webgrid-header {
        background-color: #497bf9;
        color: #FFFFFF;
        padding-bottom: 4px;
        padding-top: 5px;
        text-align: left;
        cursor: crosshair;
    }

    .webgrid-footer {
    }

    .webgrid-row-style {
        padding: 3px 7px 2px;
    }

    .webgrid-alternating-row {
        background-color: #EAF2D3;
        padding: 3px 7px 2px;
    }

    .webgrid th:first-child {
        display: table-cell;
        text-align: center;
    }

    .webgrid th:nth-child(2) {
        display: table-cell;
    }

        .webgrid th:nth-child(2) span {
            display: none;
        }

        .webgrid th:nth-child(2)::after {
            content: attr(data-th);
        }

    .webgrid tr:nth-child(2n+1) {
        background-color: #eaf3f3;
    }

    .webgrid th {
        background-color: #167f92;
        border: 1px solid #fff;
        color: #fff;
        display: none;
        padding: 1em;
    }

        .webgrid th:first-child {
            display: table-cell;
            text-align: center;
        }

    /* for textbox webgrid*/

    input[type="text"] {
        width: 70px;
        font-weight: bold;
    }

    .hidecol {
        visibility: hidden;
    }

    .passeee {
        width: 100px;
    }

    input#LastName {
        width: 77px;
        height: 23px;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        $('.webgrid-table td:nth-child(3),th:nth-child(3)').hide();
        $('.webgrid-table td:nth-child(4),th:nth-child(4)').hide();
    })
</script>

<div id="myPager" style="margin-top:17px;" class="primary">


    @{
        var grid = new WebGrid(
                        canPage: true,
                        rowsPerPage: Model.PageSize,
                        canSort: true,
                        ajaxUpdateContainerId: "grid");

        grid.Bind(Model.EX_IT, rowCount: Model.TotalRows, autoSortAndPage: false);
        grid.Pager(WebGridPagerModes.All);

        @grid.GetHtml(htmlAttributes: new { id = "grid" },
            fillEmptyRows: false,
             tableStyle: "webgrid-table",
              headerStyle: "webgrid-header",
                footerStyle: "webgrid-footer",
                alternatingRowStyle: "webgrid-alternating-row",
                rowStyle: "webgrid-row-style",
            mode: WebGridPagerModes.All,
                              columns: grid.Columns(
                                                                grid.Column(header: "S.No", canSort: false,format:@<text><div style="text-align:center;">@(item.WebGrid.Rows.IndexOf(item) + 1)</div></text>),
                                                                grid.Column("ItemName", header: "Item Name", canSort: false),
                                                                grid.Column("ItemId", header: "Item Id", canSort: false, style: "hidecol"),
                                                                grid.Column("GroupId", header: "Item Group ID", canSort: false),
                                                                grid.Column("GroupName", header: "Item Group Name", canSort: false),
                                                                grid.Column("UnitName", header: "Unit Name", canSort: false),
                                                                grid.Column("HSNCode", header: "HSN Code", canSort: false),
                                                                grid.Column("GIETMCode", header: "GIETM Code", canSort: false),
                                                                grid.Column(header: "Acceptable Qty. Variation(%)", format:@<text><input type="number" name="PercentageOfExcess" step = "any" min = "0.00" max = "" value="@item.PercentageOfExcess" /> </text>, style: "passeee")


                                                                     ));
}


</div>


<div class="row">
    <div id="myModal1" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">X</button>
                    <h3 class="modal-title">Confirmation</h3>
                </div>
                <div class="modal-body">
                    <p class="text-danger"><small>Issue Quantity Can not Greater than Balance Quantity Or Avl Quantity</small></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" id="closebtn">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>


