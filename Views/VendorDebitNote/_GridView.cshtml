<style>
    .gridTable {
        margin: 5px;
        padding: 10px;
        border: 1px #c8c8c8 solid;
        border-collapse: collapse;
        min-width: 550px;
        background-color: #fff;
        color: #fff;
        width: 100%;
    }

    .gridHead th {
        font-weight: bold;
        background-color: #5c93f0;
        color: #fff;
        padding: 10px;
        text-align: center;
    }

    .gridHead a:link, .gridHead a:visited, .gridHead a:active, .gridHead a:hover {
        color: #fff;
    }

    .gridHead a:hover {
        text-decoration: underline;
    }

    .gridTable tr.gridAltRow {
        background-color: #efeeef;
    }

    .gridTable tr:hover {
        background-color: #7da3f2;
    }

    .gridTable tr :hover {
        color: white;
    }

    .gridAltRow td {
        padding: 10px 4px;
        margin: 5px;
        color: #333;
        font-size: 12px;
    }

    .gridRow td {
        padding: 10px 4px;
        color: #333;
        font-size: 12px;
    }

    .gridFooter td {
        padding: 10px;
        color: #ffffff;
        font-size: 12pt;
        text-align: center;
        background-color: #5c93f0;
    }

    .gridFooter a {
        text-decoration: none;
        padding: 6px 11px;
        margin-right: 6px;
        border-radius: 3px;
        color: #fff;
        text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.5);
        border: 1px solid #43505e;
        background: #556270;
        background: -moz-linear-gradient(top, #556270 0%, #444d57 100%);
        background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#556270), color-stop(100%,#444d57));
        background: -webkit-linear-gradient(top, #556270 0%,#444d57 100%);
        background: -o-linear-gradient(top, #556270 0%,#444d57 100%);
        background: -ms-linear-gradient(top, #556270 0%,#444d57 100%);
        background: linear-gradient(to bottom, #556270 0%,#444d57 100%);
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#556270', endColorstr='#444d57',GradientType=0 );
        -moz-box-shadow: inset 0 3px 0px -2px rgba(255, 255, 255, .3);
        -webkit-box-shadow: inset 0 3px 0px -2px rgba(255, 255, 255, .3);
        box-shadow: inset 0 3px 0px -2px rgba(255, 255, 255, .3);
    }


    .my-classC {
        text-align: center;
    }
</style>

<div id="gridposition" style="width: 100%; overflow:scroll">
    @if (Model.Count > 0)
    {

        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>PO Date</th>
                    <th>MRN Date</th>
                    <th>Challan No/Bill No.</th>
                    <th>Challan /Bill Date</th>
                    <th>GRN No.</th>
                    <th>GRN Date</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@ViewBag.PODate</td>
                    <td>@ViewBag.MRNDate</td>
                    <td>@ViewBag.ChallanNo</td>
                    <td>@ViewBag.ChallanDate</td>
                    <td>@ViewBag.GRNNo</td>
                    <td>@ViewBag.GRNDate</td>
                </tr>
            </tbody>
        </table>

        <br/>
        <br/>

        var grid1 = new WebGrid(source: Model, canPage: false, ajaxUpdateContainerId: "positionGrid");

        @grid1.GetHtml(mode: WebGridPagerModes.All,
                   tableStyle: "gridTable",
                   headerStyle: "gridHead",
                   footerStyle: "gridFooter",
                   rowStyle: "gridRow",
                   alternatingRowStyle: "gridAltRow",
                   htmlAttributes: new { id = "positionGrid" },
                   fillEmptyRows: false,
                   columns: grid1.Columns(
                       grid1.Column(header: "S.No.", format: @<text><div style="text-align:center;">@(item.WebGrid.Rows.IndexOf(item) + 1)</div></text>),
                    grid1.Column("GroupName", header: "Item Group", style: "my-classC"),
                    grid1.Column("ItemName", header: "Item Name", style: "my-classC"),
                    grid1.Column("Unit", header: "Unit", style: "my-classC"),
                    grid1.Column("QuantityReceived", header: "Quantity Received", format: (item) => string.Format("{0:0.000}", item.QuantityReceived), style: "my-classC"),
                    grid1.Column("Rate", header: "Rate", format: (item) => string.Format("{0:0.00}", item.Rate), style: "my-classR"),
                    grid1.Column(header: "Select to create debit note", format:@<text> <input type="checkbox" name="chk" id="@(item.TransId)"  class="checkbox"/></text>, style: "my-classC")
                    ));

       <br />
        <div class="text-right pr10">
            <form method="post" action="/VendorDebitNote/CreateDebitNote" id="frmCreateNote">
                <input type="hidden" id="hdnData" name="hdn"/>
                <input type="hidden" id="hdnProjectId" name="hdnProjectId" />
                <input type="button" name="btn" id="btnCreateDebitNote" value="Create Debit Note" class="btn btn-primary" />
                @*<a href="@Url.Action("CreateDebitNote")" class="btn btn-primary">Create Debit Note</a>*@
            </form>
        </div>

    }
    else
    {
        <p style="color:red; font-size:large">No records found !!!!</p>
    }


</div>
